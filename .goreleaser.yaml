# yaml-language-server: $schema=https://goreleaser.com/static/schema.json
# vim: set ts=2 sw=2 tw=0 fo=cnqoj

version: 2
project_name: 'MetaplayCLI'

before:
  hooks:
    - go mod tidy

# Replace existing assets to recover from partially completed releases
release:
  replace_existing_artifacts: true
  mode: replace

builds:
  - binary: metaplay
    env:
      - CGO_ENABLED=0
    goos:
      - linux
      - windows
      - darwin
    goarch:
      - amd64
      - arm64
    flags:
      - -trimpath
    ldflags:
      - -s -w
      - -X "github.com/metaplay/cli/internal/version.AppVersion={{.Version}}"
      - -X "github.com/metaplay/cli/internal/version.GitCommit={{.ShortCommit}}"
    mod_timestamp: "{{ .CommitTimestamp }}"

# TODO: Resolve appropriate UPX settings that work on all platforms.
# upx:
#   - enabled: true
#     compress: best

archives:
  - formats: ['tar.gz']
    # this name template makes the OS and Arch compatible with the results of `uname`.
    name_template: >-
      {{ .ProjectName }}_
      {{- title .Os }}_
      {{- if eq .Arch "amd64" }}x86_64
      {{- else if eq .Arch "386" }}i386
      {{- else }}{{ .Arch }}{{ end }}
      {{- if .Arm }}v{{ .Arm }}{{ end }}
    # use zip for windows archives
    format_overrides:
      - goos: windows
        formats: ['zip']

nfpms:
  - id: linux
    vendor: "Metaplay"
    homepage: "https://www.metaplay.io/"
    maintainer: "info@metaplay.io"
    description: "CLI tool to manage the Metaplay SDK in game projects, make cloud deployments, and more."
    formats:
      - apk
      - deb
      - rpm
      - termux.deb
      - archlinux
    contents:
      - src: LICENSE
        dst: /usr/share/doc/{{ .ProjectName }}/LICENSE
      - src: README.md
        dst: /usr/share/doc/{{ .ProjectName }}/README.md

brews:
  - name: metaplay
    description: "CLI tool to manage the Metaplay SDK in game projects, make cloud deployments, and more."
    homepage: "https://www.metaplay.io/"
    repository:
      owner: metaplay
      name: homebrew-tap
      token: "{{ .Env.METAPLAYBOT_GITHUB_TOKEN }}"
    commit_author:
      name: MetaplayBot
      email: info@metaplay.io
    commit_msg_template: "Brew formula update for {{ .ProjectName }} version {{ .Tag }}"
    directory: Formula
    test: |
      system "#{bin}/metaplay version"

scoops:
  - name: metaplay
    commit_author:
      name: MetaplayBot
      email: info@metaplay.io
    commit_msg_template: "Scoop update for {{ .ProjectName }} version {{ .Tag }}"
    homepage: "https://www.metaplay.io/"
    description: "CLI tool to manage the Metaplay SDK in game projects, make cloud deployments, and more."
    repository:
      owner: metaplay
      name: scoop-bucket
      token: "{{ .Env.METAPLAYBOT_GITHUB_TOKEN }}"

chocolateys:
  - name: metaplay
    package_source_url: https://github.com/metaplay/choco-packages
    owners: Metaplay
    title: Metaplay CLI
    authors: Metaplay
    project_url: "https://metaplay.io"
    icon_url: "https://metaplay.io/hubfs/Branding/Monogram/Monogram%20-%20white%20on%20green%20512.png"
    copyright: 2024-2025 Metaplay
    license_url: "https://github.com/metaplay/cli/?tab=License-1-ov-file#License-1-ov-file"
    require_license_acceptance: false
    project_source_url: https://github.com/metaplay/cli
    docs_url: https://docs.metaplay.io/
    bug_tracker_url: https://github.com/metaplay/cli/issues
    tags: "metaplay sdk cli windows development gamedev game-development"
    summary: "CLI tool to manage the Metaplay SDK in game projects, make cloud deployments, and more."
    description: |
      {{ .ProjectName }} installer package.
      "CLI tool to manage the Metaplay SDK in game projects, make cloud deployments, and more."
    release_notes: "https://github.com/metaplay/cli/releases/tag/{{ .Version }}"
    api_key: "{{ .Env.METAPLAYBOT_CHOCO_API_KEY }}"
    source_repo: "https://push.chocolatey.org"
    skip_publish: false

changelog:
  sort: asc
  filters:
    exclude:
      - "^docs:"
      - "^test:"
